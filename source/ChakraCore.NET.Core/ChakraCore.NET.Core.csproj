<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard1.4</TargetFramework>
    <RootNamespace>ChakraCore.NET</RootNamespace>
    <Authors>QianFan Jiang (John Masen)</Authors>
    <Company>QianFan Jiang (John Masen)</Company>
    <Product>ChakraCore.NET</Product>
    <Description>A lightweight chakracore wrapper to support scripting in dotnetcore application.
this package contains all core features</Description>
    <PackageLicenseUrl>https://github.com/JohnMasen/ChakraCore.NET/blob/master/LICENSE</PackageLicenseUrl>
    <PackageProjectUrl>https://github.com/JohnMasen/ChakraCore.NET</PackageProjectUrl>
    <RepositoryUrl>https://github.com/JohnMasen/ChakraCore.NET</RepositoryUrl>
    <PackageTags>chakracore,netcore</PackageTags>
    <Version>1.1.3</Version>
    <PackageReleaseNotes>added missing Datetime converter</PackageReleaseNotes>
    <AssemblyVersion>1.1.3.0</AssemblyVersion>
    <FileVersion>1.1.3.0</FileVersion>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.ChakraCore" Version="1.11.24" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
  </ItemGroup>

  <ItemGroup>
    <Compile Update="CodeTemplates\JSValueBindingExtend\SetMethodAndFunction.cs">
      <DependentUpon>SetMethodAndFunction.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="CodeTemplates\JSValueConverterExtend\FromToCallbackFunction.cs">
      <DependentUpon>FromToCallbackFunction.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="CodeTemplates\JSValueConverterExtend\FromToFunction.cs">
      <DependentUpon>FromToFunction.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="CodeTemplates\JSValueConverterExtend\FromToMethod.cs">
      <DependentUpon>FromToMethod.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="CodeTemplates\JSValueConverterExtend\RegisterHelper.cs">
      <DependentUpon>RegisterHelper.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Update="CodeTemplates\JSValueExtend\CallMethodAndFunction.cs">
      <DependentUpon>CallMethodAndFunction.tt</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <None Update="CodeTemplates\JSValueBindingExtend\SetMethodAndFunction.tt">
      <LastGenOutput>SetMethodAndFunction.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="CodeTemplates\JSValueConverterExtend\FromToCallbackFunction.tt">
      <LastGenOutput>FromToCallbackFunction.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="CodeTemplates\JSValueConverterExtend\FromToFunction.tt">
      <LastGenOutput>FromToFunction.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="CodeTemplates\JSValueConverterExtend\FromToMethod.tt">
      <LastGenOutput>FromToMethod.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="CodeTemplates\JSValueConverterExtend\RegisterHelper.tt">
      <LastGenOutput>RegisterHelper.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="CodeTemplates\JSValueExtend\CallMethodAndFunction.tt">
      <LastGenOutput>CallMethodAndFunction.cs</LastGenOutput>
      <Generator>TextTemplatingFileGenerator</Generator>
    </None>
    <None Update="CodeTemplates\Template_Footer.t4">
      <Generator></Generator>
    </None>
    <None Update="CodeTemplates\Template_Header.t4">
      <Generator></Generator>
    </None>
  </ItemGroup>

  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>

</Project>